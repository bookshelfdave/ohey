
grammar OHEY

  rule query
    (
      select
          fields:idlist
      from
          source:idlist
      where_clause?
     ) <Query>
  end

  rule where_clause
    where predicate+
  end

  rule predicate
    ref (equals | notequals | (">" | ">=" | "<" | "<=") space) ref
  end

  #rule reflist
  #  (v:ref (comma v:ref)*) {
  #    puts "REFLIST"
  #    captures(:v).map { |x| x.value }
  #  }
  #end

  rule ref
    v:id { capture(:v).value }
  end

  rule number
    ([0-9]+ space) {
      to_str.to_i
    }
  end

  rule idlist
    (v:id (comma v:id)*) {
      captures(:v).map { |x| x.value }
    }
  end

  rule id
    ([a-zA-Z][a-zA-Z\.0-9_]* space) {
      to_str.strip
    }
  end

  rule plus
    '+' space
  end

  rule comma
    ',' space
  end

  rule notequals
    '!=' space
  end

  rule equals
    '=' space
  end

  rule bool
    ("true" | "false") space
  end

  rule string
    '"' (!'"')* '"' space
  end

  rule number
    float | integer
  end

  rule float
    (digits '.' digits space*) { to_str.to_f }
  end

  rule integer
    (digits space*) { to_str.to_i }
  end

  rule digits
    [0-9]+ ('_' [0-9]+)* # Numbers may contain underscores.
  end

  rule select
    "select" space
  end

  rule where
    "where" space
  end

  rule from
    "from" space
  end

  rule space
    [ \t\r\n]*
  end

end
